To get started with learnyounode, install using

npm install -g learnyounode

1 Hello World - 
Make a file,
add console.log('HELLO WORLD') and save
Run the file using node filename and verify.


2 Baby Steps - 
Several ways are available to do this but using a loop is easiest,
as before have a file made and opened, my solution is similar to the 
official one which opens when completed. This is the official completion
var result = 0

for (var i = 2; i < process.argv.length; i++)
  result += Number(process.argv[i])

console.log(result)

******* There are other solutions involving slice which should be investigated.



3 My First IO - 
Like before there are several solutions but the are parameters which must be followed 
- fs module is required to be able to perform filesystem operations.
- readFileSync is also needed as all fs module ops which are synchronous end with sync.
The solution is - 
var fs = require("fs");

var filename = process.argv[2];

var contents = fs.readFileSync(filename).toString();

console.log(contents.split('\n').length - 1);

where you have included the fs module, taken in the file, converted to string and then split 
and sent to the console. The process.argv has a 2 because the test file is located as the third
item and arrays are zero indexed. This can be checked by passing the process.argv to the console.



4 My First Async IO -
This is almost the same as the previous exercise except that the file now needs to be handled
asynchronously. This means that instead of fs.readFileSync() it will be fs.readFile() and instead
of using a return value this needs to be obtained using a callback function. The solution is therefore this
var fs = require("fs");

var file = process.argv[2];

fs.readFile(file, 'utf-8', function(err,file){
    console.log(file.split('\n').length - 1);
});

As the documentation states 'utf-8' can be passed in as a parameter which means that you will get a string
rather than a buffer.



5 Filtered LS -
This asks you to print a list of files from a given directory. The fs.readdir() method is needed and it takes
a pathname as its first argument and a callback function as its second. The documentation also suggests using 
the path module and the first argument will be the directory name and then the extension which will need to be 
matched e.g. if files end in .txt then it will need to be filtered using .txt  The solution is this
var fs = require("fs");
var path = require("path");
var directoryPath = process.argv[2];
var fileExtension = process.argv[3];


fs.readdir(directoryPath, function(err,list){
    list.forEach(function (filename) {
    if (path.extname(filename) === '.' + fileExtension) {
      console.log(filename);
    }
  });
});

Basically the solution I used is to have all the requirements both needed and recommended, assign variables
to the process.argv locations. Use the readdir function which takes firstly the directory path and then a
callback function which itself takes err and the list as its arguments. Then using a foreach loop against the
list a function is called which takes the filename as its sole argument, if using the path.extname method which is
passed in the filename the file extension matches then it is sent to the console.


*********************************************************************************************************
Important - The challenge says that you must use Async IO
*********************************************************************************************************
