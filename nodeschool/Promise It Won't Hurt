This is the Nodeschool Promise It Won't Hurt set of challenges and the solutions. It is designed to help you use
promises to handle async operations.



Level 01  Fullfill a Promise -
This is the first challenge in this series and in it you are asked to use the "Q" library to create a promise. After  
that you will need to pass console.log to the "then" method of your promise. Then manually resolve that promise using 
setTimeout with a delay of 300ms and pass it a parameter of "RESOLVED!". There is boiler plate code included and as is
standard the challenge should be fairly basic. The solution is 

var q = require('q');
var defer = q.defer();

defer.promise.then(console.log);
setTimeout(defer.resolve, 300, "RESOLVED!");

Make sure that everything is in the correct order and you have included the exclamation mark as that will cause a 
failure.




Level 02  Reject A Promise -
The second in the series on Javascript promises asks us to create a function to print error.message using console.log.
Pass this function as a rejection handler to the "then" method of your promise. Manually reject that promise using
setTimeout with a delay of 300ms and pass it an Error object with parameter "REJECTED!". There is also boilerplate
code given which should help. The solution should look something like this

var q = require('q');
var defer = q.defer();
defer.promise.then(function(error){
    console.log(error.message);
});
setTimeout(defer.resolve, 300, new Error("REJECTED!"));

As can be seen it is almost identical to the first solution, the official solution does things a small bit different
but is well worth a look.

var q = require('q');
var def = q.defer();
    
function printError (err) {
   console.log(err.message); 
}
    
def.promise.then(null, printError);
setTimeout(def.reject, 300, new Error("REJECTED!"));
