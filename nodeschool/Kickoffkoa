These are solutions to the Kickoffkoa series of challenges 
*** Koa will not work on any Node version below 0.11.13


Level 1 Hello Koa -
As this is the first challenge of the series this should be a fairly basic challenge to ensure that all is working
for challenges further down the line. The official definition of the task is this -
Create a koa server that listens on a port passed from the command line and replies with "hello koa" when an 
HTTP GET request is sent to /.

The workshop will execute requests against the server and verify the output.
This will be easy as the hints give most if not all of the code needed so the solution will be -

var koa = require('koa');
var app = koa();
var port = process.argv[2];

app.use(function* (){
    this.body = 'hello koa';
});

app.listen(port);

Easy enough after reinstalling everything as node version was not high enough.



Level 2 Routing -
The task for the second challege is as follows -
Create a koa server that listen on a port passed from the command line, and returns the following responses from 
the following routes:

    /    - hello koa
    /404 - page not found
    /500 - internal server error
There are plenty of hints available from the accompanying material so the solution should be quick enough and should
look like this :

var koa = require('koa');
var app = koa();
var port = process.argv[2];

app.use(function* (next){
    if (this.path !== '/') {
        return yield next;
    }
    
    this.body = 'hello koa';
});

app.use(function* (next){
    if (this.path !== '/404') {
        return yield next;
     }
     
     this.body = 'page not found';
});

app.use(function* (next){
    if (this.path !== '/500') {
        return yield next;
     }
     
     this.body = 'internal server error';
});

app.listen(port);



Level 3 Request_body -
The third challenge has the following as its task -
Create a koa server which parse the post data, Convert the name field to
upper case and respond to client.

If you get this:

    POST / with { name: 'koa' }

Respond with:

    KOA
Again there are plenty of hints to accompany this challenge and the solution should look like the following -

var koa = require('koa');
var parse = require('co-body');
var app = koa();
var port = process.argv[2];

app.use(function* (next){
    if(this.method !== 'POST'){
        return yield next;
    }
    
    var body = yield parse(this);
    this.body = body.name.toUpperCase();
});

app.listen(port);



Level 4 Response Body -
This is the fourth challenge and the task on this occasion is related to the previous one, the task according to
the information on the challenge is -
Create an app that returns a stream when the client requests /stream and a JSON body when the client requests /json.

When /json is requested, the output should be

    { foo: 'bar' }

When /stream is requested, the server should respond with the content in file process.argv[3]. Use fs.createReadStream:

    fs.createReadStream(process.argv[3]);
This again is similar to both the previous challenge and also the stream adventure series of challenges. By using a
combination of both the solution should be quick and should look like this -

var koa = require('koa');
var parse = require('co-body');
var fs = require("fs");
var app = koa();
var port = process.argv[2];
var fStream = process.argv[3];

app.use(function*(next){
    if(this.path !== '/json'){
        return yield next;
    }
    
    this.body = { foo: 'bar' };
});

app.use(function*(next){
    if(this.path !== '/stream'){
        return yield next;
    }
    
    this.body = fs.createReadStream(fStream);
});

app.listen(port);

As can be seen this is a combination of the previous challenges and some other challenges from the stream series.




Level 5 Content Headers -
This is the fifth of eleven in the series and according to the documentation the task this time is -
Create an app that checks the Content-Type of the request. If it's application/json, return {message: 'hi!'} with 
appropriate content headers. Otherwise, return ok as a string.
There are also quite a lot of hints on how to resolve this challenge so using them alongside previous challenges 
and the code written should take a lot of the guesswork away which means the solution should look like -

var koa = require('koa');
var app = koa();
var port = process.argv[2];

app.use(function*(){
    this.body = this.request.is('json') ? {message: 'hi!'} : 'ok';
});
app.listen(port);

There are a couple of ways that could have been used to solve this but a ternary equation rather than a loop makes
things much shorter.
