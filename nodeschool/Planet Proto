Thes are my solutions to the Planet Proto set of challenges which deals with prototype in JavaScript

Level 1 -
The format of these challenges are slightly different to other challenge series. The first cahallenge is in the words
of the documentation is to 
Write a program that:

  * Create an object called 'robot' using an object literal
  * robot should have a property 'smart' with value true
  * Claim the result robot.smart
There is a lot of boilerplate code written  and you are warned not to tamper with certain parts. With all that in mind
the first challenge is fairly easy so here is the solution

// -> Create an object called 'robot' using an object literal
// -> robot should have a property 'smart' with value true
var robot= {
    smart : true
};

// -> Claim the result robot.smart
claim(robot.smart, true);

// ------------------------------------------------
// Common JS exports for verification, don't modify
module.exports = {
	robot: robot
}

The solution is part of an auto generated file which is then used for verification.



Level 2 -
Again a file is auto-generated son it is within that file that any solution must be put together. The task of this
challenge is within the solution file so can be followed in each step. the solution is -

// -> Create a machine object
//    with a property motors = 4
var machine ={
	motors : 4
};

// -> Create a robot object
//    with a property friendly = true
var robot = {
	friendly : true
};

// -> Create a robby object
var robby = {};

// -> Make machine the prototype of robot
robot.__proto__ = machine;

// -> Make robot the prototype of robby
robby.__proto__ = robot;

// -> What is `robby.motors`?
claim(robby.motors, 4);

// -> What is `robby.friendly`?
claim(robby.friendly, true);


// ------------------------------------------------
// Common JS exports for verification, don't modify
module.exports = {
	machine: machine,
	robot:   robot,
	robby:   robby
}



