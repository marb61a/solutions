These are my solutions to the Regex Adventure series of challenges

Level 1 Literally - 
This is the first of the challenges of the series and as usual it is very easy as usual -
For our first adventure, create a new file that will receive a string as an
argument and should return whether the string contains another string,
"LITERALLY".
There are also plenty of hints and boilerplate that can be used so the solution is fairly obvious -

module.exports = function(str){
   return /LITERALLY/.test(str);
};

Anything surrounded by the forward slashes is regarded as a regular expression.




Level 2 Anchor Start -
The second challenge is very similar to the first as the task is - 
This time your regex should match only when the given string begins with
"LITERALLY".
Again there is boilerplate code and there are also hints which give a pretty good guide to what is needed to
solve the challenge. The solution is -

module.exports = function(str){
   return /^LITERALLY/.test(str);
};




Level 3 Anchor End - 
Again the third challenge is a variation on a theme -
This time your regex should match only when the given string ends with
"BANANAS".
As is usual there is boilerplate and hints so the solution should be -

module.exports = function (str) {
   return /BANANAS$/.test(str);
};




Level 4 Character Class -
The task in this challenge is -
Write a module that returns true only when the input string starts with a
lower-case vowel or a digit.
Again this is a variation of the first challenges and the solution should be similar -

module.exports = function(str){
   return /^[aeiou0-9]/.test(str);
};




Level 5 Negated Character Class -
This time the task is -
Write a module that returns true only when:
  the first character is not a digit
  and the second character is not a capital letter.
This is a case where the answer is similar to the previous except with negation so the solution should be

module.exports = function(str){
   return /[^0-9][^A-Z]/.test(str);
};




Level 6 Meta -
This is the sixth challenge and the task this time is -
Export a function that takes a string argument and returns whether the string
ends with a literal `.` (dot).

This is a bit different than the preceeding tasks but there are plenty of hints and boilerplate code so the solution
should be -

module.exports = function(str){
   return/\.$/.test(str);
};




Level 7 Quantifier -
In this the seventh challenge the task is -
Export a function that takes a filename string as an argument and returns
whether the entire filename is a sequence of one or more digits followed by
`.jpg` or `.jpeg`.

There is as always plenty of hints and boilerplate so the solution should be quick and look like this -

module.exports = function(str){
  return /\d+\.jpe?g$/.test(str); 
};




Level 8 Split -
The task to be completed on this level is -
Strings in javascript have a `.split()` method. `.split()` takes an argument
that can be a string or a regex.

Write a module that accepts a string as its argument and returns an array that
splits the string on commas separated by arbitrary amounts of whitespace.
This is similar to both previous challenges and also challenges from other series, the solution is

module.exports = function(str){
  return str.split(/\s*,\s*/);
};
