These are the solutions for the natas game on overthewire. Natas is mostly about web security.

Level 0 - 
You are given the username and password for this level however you need to find the password which is on the page. The
solution is quite straight forward. Right click and select view source and you will see the password.



Level 1 - 
This is the same as previous but the right click has been disabled. In most browsers ctrl+u will bring up
the view source page so another quick solution.



Level 2 -
This is similar to the previous challenges as we have to find a password. The hint given is that there is nothing on 
this page. When you examine the page source code there is a directory called /files, the contents are two files in 
the directory listing. One of these files was called users.txt and when looking at the contents of the file both the 
username and password for natas3 are there.



Level 3 -
This is very similar to the previous challenge especially since the hint that is given is the exact same. When the 
page source code is opened it reveals a lot as it tells you that not even Google will find the information, this means
that there is a robot.txt file present which will prevent search engines from seeing certain directories. If we then
navigate to the robots.txt file there is a directory called /s3cr3t/ which disallows google but allows us to navigate.
Inside this directory is a file called users.txt and it contains the information we need.



Level 4 -
In this the fourth challenge we are asked to login as natas5. You will get an error message if you try to log in as
anyone else. This means that the internals of Http are going to have to be looked at and more specifically the
header of the Http. There is more information available at this address

https://en.wikipedia.org/wiki/HTTP_referer

Basically what needs to be done is that a field in the Http header needs to be altered in order to change or at 
least make the challenge think that it is the proper user. There are a couple of tools available such as 

tamper data - http://netsecurity.about.com/od/hackertools/a/What-Hackers-Do-Not-Want-You-To-Know-About-The-Tamper-
              Data-Firefox-Add-on.htm
              
there are of course others available both plugins and standalone tools. With that the challenge then is nearly
complete as all that has to be done then is to edit the header field called referer to reflect the challenge needs
so instead of natas4.natas.labs.overthewire.org’ it will say natas5.natas.labs.overthewire.org’.


Level 5 -
In this challenge we are asked to again login, when you do you get the Access disallowed. You are not logged in
message. A look through the source code reveals little but as usual persistence means that there are cookies so 
they will need to be examined using a tool like the web developer plugin for firefox. When the cookie is examined
there is a called loggedin with a value of 0 for its contents, this will have to be edited to 1 in order for the
challenge to be won.


Level 6 - 
In the sixth natas challenge the task is first to examine a php based form. When the source code is examined
as is standard there is shown a file called secret.inc in the includes directory where was being passed into the 
php code. Navigating to this file brings up a blank page but again having a look at the source code shows the 
password needed to continue.



Level 7 -
In this challenge there is a file presented with 2 tabs caled home and about. As is standard having a look at the
source code gives away a very big reveal with a hint stating that - 

password for webuser natas8 is in /etc/natas_webpass/natas8

All that has to be done is to add this on to the address of level7 such as below.

http://natas7.natas.labs.overthewire.org/index.php?page=/etc/natas_webpass/natas8

This kind of attack is know as a local file inclusion attack and there is a very good explanation of the attack at
the owasp site located here -

https://www.owasp.org/index.php/Testing_for_Local_File_Inclusion



Level 8 -
This is the eight challenge and it bears more than a passing similarity to the previous challenge. There is another
php login form, upon looking at the source code for the page there is a variable called -
  $encodedSecret = “3d3d516343746d4d6d6c315669563362″;
This is likely to be the password but although it is not securely stored it is encoded. The solution is fairly
easy as there are a couple of utlities available to decode the password.  The code itself is this

</pre>
<h1>natas8</h1>
<div id="content">
<?
 
$encodedSecret = "3d3d516343746d4d6d6c315669563362";
 
function encodeSecret($secret) {
 
return bin2hex(strrev(base64_encode($secret)));
 
}
 
if(array_key_exists("submit", $_POST)) {
 
if(encodeSecret($_POST['secret']) == $encodedSecret) {
 
print "Access granted. The password for natas9 is ";
 
} else {
 
print "Wrong secret";
 
}
 
}
 
?>
<form method="post">
Input secret: <input type="text" name="secret" />
 
<input type="submit" name="submit" /></form>
<div id="viewsource"><a href="index-source.html">View sourcecode</a></div>
</div>

As you can see there is a base64 encode which can be reversed using base64 decode and bin2hex can be reversed by
hex2bin. Performing these actions will give the needed password.




Level 9 -
In this level the file presented contains the following code
</pre>
<h1>natas9</h1>
<div id="content"><form>
Find words containing: <input type="text" name="needle" /><input type="submit" name="submit" value="Search" />
</form>
Output:
<pre>
<? $key = ""; if(array_key_exists("needle", $_REQUEST)) { $key = $_REQUEST["needle"]; } if($key != "") 
{ passthru("grep -i $key dictionary.txt"); } ?></pre>
<div id="viewsource"><a href="index-source.html">View sourcecode</a></div>
</div>
<pre>

Basically you are given a search box which searches a file called dictionary.txt for words, this is not sanitised
which is where the main problem lies as unsanitised inputs are always a bad idea. In this case the solution is
even easier as natas tells where the password file is located and all that has to be done is the proper file
entered into the search like this
- cat /etc/natas_webpass/natas10”
