1 Reverse a string - The solution is below

function reverseString(str) {
  return str.split("").reverse().join("");
}
reverseString('hello');
Basically you split the string, reverse it and then rejoin.


2 Factorialize a Number - The solution is the following
function factorialize(num) {
  return (num < 2)?1:factorialize(num - 1)*num;
}
factorialize(5);


3 Find the Longest Word in a String - This is a bit more complex but the solution is
function findLongestWord(str) {
  var arrayOfWords = str.split(' ');
  var largestNum = 0;
  for( var i in arrayOfWords){
    if(arrayOfWords[i].length > largestNum){
      largestNum = arrayOfWords[i].length;
    }
  }
  return largestNum;
}
findLongestWord('The quick brown fox jumped over the lazy dog');


4 Diff 2 Arrays - The solution is shown below, 
function diff(arr1, arr2) {
  var newArr = [];
  // Same, same; but different.
  for(var i in arr1){
    if(arr2.indexOf(arr1[i]) === -1){
      newArr.push(arr1[i]);
    }
  }
  
  for(var i in arr2){
    if(arr1.indexOf(arr2[i]) === -1){
      newArr.push(arr2[i]);
    }
  }
  return newArr;
}
diff([1, 2, 3, 5], [1, 2, 3, 4, 5]);


5 Title case a sentence - The solution below involves regex, a great site for learning is http://regexone.com,
the chart on the side will explain better what the various regex characters mean.
function titleCase(str) {
  
  str1 = str.replace(/\w\S*/g, function(txt){
                     return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
  });
    
  return str1;
}
titleCase("I'm a little tea pot");


6 Return Largest Numbers in Arrays - This is a reasonable difficult challenge because you are dealing with a multi
dimensional array so you will have a couple of loops, one for each of the dimensions that will run. Also there are 
a number of solutions using math.max but I could not get them to work, here is the solution that worked for me
function largestOfFour(arr) {
  // You can do this!
  var tempNum = 0;
  var largest = [];
  for(var i in arr){
    for(var j in arr[i]){
      if(arr[i][j] > tempNum){
        tempNum = arr[i][j];
      }
    }
    largest.push(tempNum);
  } 
  return largest;
}
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);
Basically you initialise a temporary number and an empty array, you then cycle through the inputted arrays and
push the largest into the empty array which is then returned.

